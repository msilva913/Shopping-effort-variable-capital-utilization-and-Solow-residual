function g1 = static_g1(T, y, x, params, T_flag)
% function g1 = static_g1(T, y, x, params, T_flag)
%
% File created by Dynare Preprocessor from .mod file
%
% Inputs:
%   T         [#temp variables by 1]  double   vector of temporary terms to be filled by function
%   y         [M_.endo_nbr by 1]      double   vector of endogenous variables in declaration order
%   x         [M_.exo_nbr by 1]       double   vector of exogenous variables in declaration order
%   params    [M_.param_nbr by 1]     double   vector of parameter values in declaration order
%                                              to evaluate the model
%   T_flag    boolean                 boolean  flag saying whether or not to calculate temporary terms
%
% Output:
%   g1
%

if T_flag
    T = directed_search_est.static_g1_tt(T, y, x, params);
end
g1 = zeros(46, 46);
g1(1,1)=(-1);
g1(1,3)=1;
g1(1,4)=(-(T(10)*T(13)));
g1(2,2)=(-1);
g1(2,5)=(-(T(10)*T(13)));
g1(3,3)=(-1);
g1(3,7)=1;
g1(3,12)=(-1);
g1(4,4)=(-(T(5)*T(10)+T(14)));
g1(4,10)=1;
g1(5,5)=(-(T(5)*T(10)+T(14)));
g1(5,11)=1;
g1(6,1)=(-T(15));
g1(6,4)=(-(T(10)*T(15)));
g1(6,7)=(-(1-T(15)));
g1(6,10)=1;
g1(6,17)=1;
g1(6,18)=1;
g1(7,2)=(-T(15));
g1(7,5)=(-(T(10)*T(15)));
g1(7,8)=(-(1-T(15)));
g1(7,11)=1;
g1(7,17)=1;
g1(7,19)=1;
g1(8,16)=1;
g1(8,17)=(-1);
g1(8,18)=(-1);
g1(8,21)=1;
g1(8,25)=1;
g1(9,15)=1;
g1(9,17)=(-1);
g1(9,19)=(-1);
g1(9,22)=1;
g1(9,26)=1;
g1(10,17)=(-1);
g1(10,20)=1/params(5);
g1(10,24)=(-1);
g1(10,31)=1;
g1(11,8)=(-params(3));
g1(11,23)=1-(1-params(3));
g1(11,25)=T(1)*(1-params(10));
g1(11,26)=params(10)*T(1);
g1(12,4)=1;
g1(12,12)=(-1);
g1(12,32)=1;
g1(13,3)=1;
g1(13,5)=1;
g1(13,8)=(-1);
g1(13,32)=1;
g1(13,33)=1;
g1(14,3)=1;
g1(14,7)=(-(T(16)*(T(12)-T(12)*params(14))));
g1(14,9)=(-(T(16)*((-T(12))-params(14)*(-T(12)))));
g1(14,12)=(-(T(16)*(1-T(12)-(1-T(12))*params(14))));
g1(14,24)=1;
g1(15,6)=1-params(2);
g1(15,16)=(-(params(2)*T(1)));
g1(16,6)=1-params(2);
g1(16,15)=(-(params(2)*T(1)));
g1(17,6)=(-1);
g1(17,16)=1;
g1(17,25)=(-params(4));
g1(18,6)=(-1);
g1(18,15)=1;
g1(18,26)=(-params(4));
g1(19,6)=1;
g1(19,8)=(-(params(3)*params(12)));
g1(19,23)=params(3)*params(12);
g1(20,1)=1;
g1(20,2)=(-1);
g1(20,39)=1;
g1(21,1)=(-(T(6)-(T(6)-1)));
g1(21,4)=(-(T(6)*T(10)*(1-T(5))-(T(6)-1)*T(10)));
g1(21,7)=1;
g1(21,18)=(-(params(9)*params(8)));
g1(21,21)=(-(T(3)*T(6)));
g1(21,25)=(-(T(3)*T(6)));
g1(21,28)=(-T(6));
g1(22,2)=(-(T(6)-(T(6)-1)));
g1(22,5)=(-(T(6)*T(10)*(1-T(5))-(T(6)-1)*T(10)));
g1(22,8)=1;
g1(22,19)=(-(params(9)*params(8)));
g1(22,22)=(-(T(3)*T(6)));
g1(22,26)=(-(T(3)*T(6)));
g1(22,29)=(-T(6));
g1(23,1)=(-(T(6)-(T(6)-1)));
g1(23,13)=1;
g1(23,18)=(-(params(9)*params(8)));
g1(23,21)=(-(T(3)*T(6)));
g1(23,28)=(-T(6));
g1(24,2)=(-(T(6)-(T(6)-1)));
g1(24,14)=1;
g1(24,19)=(-(params(9)*params(8)));
g1(24,22)=(-(T(3)*T(6)));
g1(24,29)=(-T(6));
g1(25,18)=(-(1-params(10)));
g1(25,19)=(-params(10));
g1(25,20)=1;
g1(26,21)=(-(1-params(10)));
g1(26,22)=(-params(10));
g1(26,23)=1;
g1(27,4)=(-(T(10)*(1-params(10))));
g1(27,5)=(-(params(10)*T(10)));
g1(27,25)=(-(T(3)*(1-params(10))));
g1(27,26)=(-(params(10)*T(3)));
g1(27,27)=1;
g1(28,7)=(-(1-params(10)));
g1(28,8)=(-params(10));
g1(28,9)=1;
g1(29,28)=1-params(15);
g1(30,30)=1-params(16);
g1(31,28)=(-1);
g1(31,29)=1;
g1(31,30)=(-1);
g1(32,32)=1-params(17);
g1(33,33)=1-params(18);
g1(34,31)=1-(params(19)+params(20)+params(20)*(-params(19)));
g1(35,1)=1;
g1(35,7)=(-1);
g1(35,34)=1;
g1(36,2)=1;
g1(36,8)=(-1);
g1(36,35)=1;
g1(37,1)=1-params(10);
g1(37,2)=params(10);
g1(37,7)=(-(1-params(10)));
g1(37,8)=(-params(10));
g1(37,38)=1;
g1(38,2)=1;
g1(38,17)=(-1);
g1(38,43)=1;
g1(39,1)=1-params(10);
g1(39,2)=params(10);
g1(39,13)=(-(1-params(10)));
g1(39,14)=(-params(10));
g1(39,45)=1;
g1(40,20)=params(9);
g1(40,23)=1-params(9);
g1(40,38)=(-1);
g1(40,42)=1;
g1(41,20)=params(9);
g1(41,23)=1-params(9);
g1(41,44)=1;
g1(41,45)=(-1);
g1(42,20)=1;
g1(42,38)=(-1);
g1(42,40)=1;
g1(43,20)=(-1);
g1(43,38)=1;
g1(43,41)=1;
g1(43,43)=(-1);
g1(44,18)=(-1);
g1(44,36)=1;
g1(45,19)=(-1);
g1(45,37)=1;
g1(46,31)=(-1);
g1(46,46)=1;
if ~isreal(g1)
    g1 = real(g1)+2*imag(g1);
end
end
